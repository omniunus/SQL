0. USE xxDatabase; SELECT * FROM XXTABLE;
   View the table in a database.

1. JOIN, INNER JOIN, LEFT JOIN, SELF JOIN

   JOIN
   by default, join means INNER JOIN
   SELECT xx FROM xxTable INNER JOIN xxxTable USING (xx)
or
   SELECT xx FROM Table1 INNER JOIN Table2 on xx.Table1 = xx.Table2

INNER JOIN
   Match each keys from one table to another, in Venn diagram it's the middle part, like what we have for A & B.
   If something only exist in one table but not the other, that part would not be shown after appllied inner join.
   
LEFT JOIN
   Most commonly used.  For joining two tables together using a same key. Everything in the left table will be included but for the right table is not.
   Eg: select xx from t1 left join t2 on t1.xxx = t2.xxx;

SELF JOIN
MySQL SELF JOIN is using INNER JOIN
   Use it when need to compare same table rows, (or hierarchical data)
   Eg: SELECT xx FROM Table t1, Table t2 WHERE xxCondition;
   Eg: DELETE xx FROM Table t1, Table t2 WHERE xxCondition;
   
   Here is how self join look like, it has all the combinations as monto caro simulation
   If there are 9 items, after self join, it will be 81 items.
   
      Cinema table:
   +---------+------+
   | seat_id | free |
   +---------+------+
   | 1       | 1    |
   | 2       | 0    |
   | 3       | 1    |
   | 4       | 1    |
   | 5       | 1    |
   +---------+------+
   
   SELECT a.seat_id, a.free, b.seat_id, b.free
   from cinema a join cinema b;
   
   Seat_idFreeSeat_idFree
         1	1	1	1
         2	0	1	1
         3	1	1	1
         4	1	1	1
         5	1	1	1
         
         1	1	2	0
         2	0	2	0
         3	1	2	0
         4	1	2	0
         5	1	2	0

2. difference between WHERE and ON
   SELECT xx from t1 INNER JOIN t2 WHERE conditions;
   SELECT xx from t1 INNER JOIN t2 ON conditions;
   
   The ON clause defines the relationship between the tables.
   The WHERE clause describes which rows you are interested in.
   
   ususally give same results, however when using left join:
   If the ON clause fails, we still get a row with columns from the left table but with NULLs in the columns from the right table.
   If the WHERE clause fails we can't get the row at all.


3. SELECT and DELETE
   SELECT xx FROM xxTable
   WHERE xxCondition;
   
   DELETE xx FROM xxTable
   WHERE xxCondition;
   
4. primary orders!
   SELECT, FROM, WHERE, GROUP BY, HAVING, ORDER BY

   SELECT column_name(s)
   FROM table_name
   WHERE condition
   GROUP BY column_name(s)
   HAVING condition
   ORDER BY column_name(s);
   
5. DISTINCT
   DISTINCT is used after SELECT, not in WHERE
   DISTINCT does not have ()
   
   SELECT DISTINCT xx,xxx FROM t1
 

6. IFNULL(xx,0)
   is important when using table gatherings to do calculations
   
